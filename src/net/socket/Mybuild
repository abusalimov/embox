package embox.net.socket

module raw_sock {
	source "raw_sock.c"

	depends embox.framework.net.sock.sock
	depends embox.compat.libc.assert.assert
	depends embox.compat.libc.^string.str
	depends embox.net.skbuff
	depends embox.net.sock
	depends embox.util.dlist.DList
}

module tcp_sock {
	source "tcp_sock.c"
	option number amount_tcp_sock=20
	option number max_simultaneous_tx_pack = 0

	depends embox.net.l3.route
	depends embox.net.sock
	depends embox.net.l4.tcp
	depends embox.net.skbuff
	depends embox.compat.posix.net.inet_addr
	depends embox.compat.libc.^string.str     /* memset, memcpy */
	depends embox.mem.misc.pool
	depends embox.framework.LibFrameworkNet
}

module udp_sock {
	source "udp_sock.c"

	depends embox.framework.net.sock.sock
	depends embox.compat.libc.assert.assert
	depends embox.compat.libc.^string.str
	depends embox.net.lib.udp
	depends embox.util.indexator
	depends embox.util.dlist.DList
}

module af_inet {
	source "af_inet.c"
	option number amount_inet_sock=20

	depends embox.net.sock
	depends embox.net.l3.route
	depends embox.util.indexator
	depends embox.framework.LibFrameworkNet
}

module af_inet6 {
	source "af_inet6.c"
	option number amount_inet6_sock=20

	depends embox.net.sock
	depends embox.util.indexator
	depends embox.framework.LibFrameworkNet
}

@DefaultImpl(no_af_packet)
abstract module af_packet_api { }

module af_packet extends af_packet_api {
	source "af_packet.c"
	option number amount_sockets=20

	depends embox.net.sock
	depends embox.net.packet
	depends embox.framework.LibFrameworkNet
}

module no_af_packet extends af_packet_api {
	source "no_af_packet.c"
	option number amount_sockets=20

	depends embox.net.sock
	depends embox.net.packet
	depends embox.framework.LibFrameworkNet
}

module af_unix {
	source "af_unix.c"

	depends embox.net.sock
	depends embox.framework.LibFrameworkNet
}

module socket {
	source "ksocket.c"
	source "socket_desc.c"
	option number connect_timeout=5000

	depends embox.compat.libc.^string.str
	depends embox.net.sock
	depends embox.net.dev //ksocket, netdev_get_by_name
	depends embox.util.sys_log
	@NoRuntime depends embox.compat.posix.net.socket // for task_idx_ops_socket
}
